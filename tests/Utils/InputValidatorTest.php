<?php

namespace Iota\Tests;

use Iota\InputValidator;
use PHPUnit\Framework\TestCase;

class InputValidatorTest extends TestCase
{
    public function validSafeStringProvider()
    {
        return [
            ['a'],
            ['$'],
        ];
    }

    /**
     * @dataProvider validSafeStringProvider
    */
    public function testIsSafeString($string)
    {
        $validator = new InputValidator();

        $this->assertTrue($validator->isSafeString($string));
    }

    public function invalidSafeStringProvider()
    {
        return [
            ['£'],
            ['€'],
            ['∑'],
        ];
    }

    /**
     * @dataProvider invalidSafeStringProvider
     */
    public function testIsSafeStringOnInvalidValue($string)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isSafeString($string));
    }

    public function validAddressProvider()
    {
        return [
            ['JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMPIVGPNE'],
            ['JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLS'],
        ];
    }

    /**
     * @dataProvider validAddressProvider
    */
    public function testIsAddress($address)
    {
        $validator = new InputValidator();

        $this->assertTrue($validator->isAddress($address));
    }

    public function invalidAddressProvider()
    {
        return [
            ['JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSASD'],
            ['123adfdsafLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLASD'],
            [1432432],
        ];
    }

    /**
     * @dataProvider invalidAddressProvider
     */
    public function testIsAddressOnInvalidValue($address)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isAddress($address));
    }

    public function testIsArrayOfAttachedTrytes()
    {
        $array = [


        ];
        $validator = new InputValidator();

        $this->assertTrue($validator->isArrayOfAttachedTrytes($array));
    }

    public function invalidArrayOfAttachedTrytesProvider()
    {
        return [
            [

            ],
            [
                'ABCDWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQRVNLLSJ',
            ],
            [
                ['address' => 'JALLWDTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMP'],
            ]
        ];
    }

    /**
     * @dataProvider invalidArrayOfAttachedTrytesProvider
     */
    public function testIsArrayOfAttachedTrytesOnInvalidArray($array)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isArrayOfAttachedTrytes($array));
    }

    public function testIsArrayOfHashes()
    {
        $array = [
            'JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMPIVGPNE',
            'ABCDWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQRVNLLSJ'
        ];
        $validator = new InputValidator();

        $this->assertTrue($validator->isArrayOfHashes($array));
    }

    public function invalidHashedArrayProvider()
    {
        return [
            [
                [
                    'JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMPIVGPNE',
                    'fdsafBCDWDUOSTSJEEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQRVNLLSJ'
                ],
            ],
            [
                'ABCDWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQRVNLLSJ'
            ],
            [
                ['address' => 'JALLWDTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMP'],
            ],
        ];
    }

    /**
     * @dataProvider invalidHashedArrayProvider
     */
    public function testIsArrayOfHashesOnInvalidArray($array)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isArrayOfHashes($array));
    }

    public function testIsArrayOfTrytes()
    {
        $array = [


        ];
        $validator = new InputValidator();

        $this->assertTrue($validator->isArrayOfTrytes($array));
    }

    public function invalidArrayOfTrytesProvider()
    {
        return [
            [
                [
                    'JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMPIVGPNE',
                    'fdsafBCDWDUOSTSJEEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQRVNLLSJ',
                ]
            ],
            [
                'ABCDWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQRVNLLSJ'
            ],
            [
                ['address' => 'JALLWDTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMP'],
            ]
        ];
    }

    /**
     * @dataProvider invalidArrayOfTrytesProvider
     */
    public function testIsArrayOfTrytesOnInvalidArray($array)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isArrayOfTrytes($array));
    }

    public function validArrayOfTxObjectsProvider()
    {
        return [
            [
                [
                    "hash" => "IPQYUNLDGKCLJVEJGVVISSQYVDJJWOXCW9RZXIDFKMBXDVZDXFBZNZJKBSTIMBKAXHFTGETEIPTZGNTJK",
                    "signatureMessageFragment
                    "address" => "A9RGRKVGWMWMKOLVMDFWJUHNUNYWZTJADGGPZGXNLERLXYWJE9WQHWWBMCPZMVVMJUMWWBLZLNMLDCGDJ",
                    "value" => 0,
                    "obsoleteTag" => "999999999999999999999999999",
                    "timestamp" => 1482522289,
                    "currentIndex" => 0,
                    "lastIndex" => 0,
                    "bundle" => "TXEFLKNPJRBYZPORHZU9CEMFIFVVQBUSTDGSJCZMBTZCDTTJVUFPTCCVHHORPMGCURKTH9VGJIXUQJVHK",
                    "trunkTransaction" => "999999999999999999999999999999999999999999999999999999999999999999999999999999999",
                    "branchTransaction" => "999999999999999999999999999999999999999999999999999999999999999999999999999999999",
                    "tag" => "MIRMAZTQUR9MMEPCWOMHMDLZPFE",
                    "attachmentTimestamp" => -1737679689424,
                    "attachmentTimestampLowerBound" => -282646045775,
                    "attachmentTimestampUpperBound" => 2918881518838,
                    "nonce" => "IJZRLQMGVIYWOS9FDKDRPONJWNB",
                ],
            ],
            [
                [
                    [
                        "hash" => "IPQYUNLDGKCLJVEJGVVISSQYVDJJWOXCW9RZXIDFKMBXDVZDXFBZNZJKBSTIMBKAXHFTGETEIPTZGNTJK",
                        "signatureMessageFragment
                        "address" => "A9RGRKVGWMWMKOLVMDFWJUHNUNYWZTJADGGPZGXNLERLXYWJE9WQHWWBMCPZMVVMJUMWWBLZLNMLDCGDJ",
                        "value" => 0,
                        "obsoleteTag" => "999999999999999999999999999",
                        "timestamp" => 1482522289,
                        "currentIndex" => 0,
                        "lastIndex" => 0,
                        "bundle" => "TXEFLKNPJRBYZPORHZU9CEMFIFVVQBUSTDGSJCZMBTZCDTTJVUFPTCCVHHORPMGCURKTH9VGJIXUQJVHK",
                        "trunkTransaction" => "999999999999999999999999999999999999999999999999999999999999999999999999999999999",
                        "branchTransaction" => "999999999999999999999999999999999999999999999999999999999999999999999999999999999",
                        "tag" => "MIRMAZTQUR9MMEPCWOMHMDLZPFE",
                        "attachmentTimestamp" => -1737679689424,
                        "attachmentTimestampLowerBound" => -282646045775,
                        "attachmentTimestampUpperBound" => 2918881518838,
                        "nonce" => "IJZRLQMGVIYWOS9FDKDRPONJWNB",
                    ],
                    [
                        "hash" => "IPQYUNLDGKCLJVEJGVVISSQYVDJJWOXCW9RZXIDFKMBXDVZDXFBZNZJKBSTIMBKAXHFTGETEIPTZGNTJK",
                        "signatureMessageFragment
                        "address" => "A9RGRKVGWMWMKOLVMDFWJUHNUNYWZTJADGGPZGXNLERLXYWJE9WQHWWBMCPZMVVMJUMWWBLZLNMLDCGDJ",
                        "value" => 0,
                        "obsoleteTag" => "999999999999999999999999999",
                        "timestamp" => 1482522289,
                        "currentIndex" => 0,
                        "lastIndex" => 0,
                        "bundle" => "TXEFLKNPJRBYZPORHZU9CEMFIFVVQBUSTDGSJCZMBTZCDTTJVUFPTCCVHHORPMGCURKTH9VGJIXUQJVHK",
                        "trunkTransaction" => "999999999999999999999999999999999999999999999999999999999999999999999999999999999",
                        "branchTransaction" => "999999999999999999999999999999999999999999999999999999999999999999999999999999999",
                        "tag" => "MIRMAZTQUR9MMEPCWOMHMDLZPFE",
                        "attachmentTimestamp" => -1737679689424,
                        "attachmentTimestampLowerBound" => -282646045775,
                        "attachmentTimestampUpperBound" => 2918881518838,
                        "nonce" => "IJZRLQMGVIYWOS9FDKDRPONJWNB",
                    ],
                ],
            ],
        ];
    }

    /**
     * @dataProvider validArrayOfTxObjectsProvider
     */
    public function testIsArrayOfTxObjects($bundle)
    {
        $validator = new InputValidator();

        $this->assertTrue($validator->isArrayOfTxObjects($bundle));
    }

    public function invalidArrayOfTxObjectsProvider()
    {
        return [
            [[]],
            ['ASDFDSAFDSAja9fd'],
            [
                [
                    "hash" => "IPQYUNLDGKCLJVEJGVVISSQYVDJJWOXCW9RZXIDFKMBXDVZDXFBZNZJKBSTIMBKAXHFTGETEIPTZGNTJK",
                    "signatureMessageFragment
                    "address" => "A9RGRKVGWMWMKOLVMDFWJUHNUNYWZTJADGGPZGXNLERLXYWJE9WQHWWBMCPZMVVMJUMWWBLZLNMLDCGDJ",
                    "tag" => "999999999999999999999999999",
                    "timestamp" => 1482522289,
                    "currentIndex" => 0,
                    "lastIndex" => 0,
                    "bundle" => "TXEFLKNPJRBYZPORHZU9CEMFIFVVQBUSTDGSJCZMBTZCDTTJVUFPTCCVHHORPMGCURKTH9VGJIXUQJVHK",
                    "trunkTransaction" => "999999999999999999999999999999999999999999999999999999999999999999999999999999999",
                    "branchTransaction" => "999999999999999999999999999999999999999999999999999999999999999999999999999999999",
                    "nonce" => "999999999999999999999999999999999999999999999999999999999999999999999999999999999",
                ]
            ],
        ];
    }

    /**
     * @dataProvider invalidArrayOfTxObjectsProvider
     */
    public function testIsArrayOfTxObjectsOnInvalidValue($bundle)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isArrayOfTxObjects($bundle));
    }

    public function testIsHash()
    {
        $hashedString = 'JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLS';
        $validator = new InputValidator();

        $this->assertTrue($validator->isHash($hashedString));
    }

    public function invalidHashedStringProvider()
    {
        return [
            ['JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMPIVGPNE'],
            ['123adfdsafLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLASD'],
            [1432432],
        ];
    }

    /**
     * @dataProvider invalidHashedStringProvider
     */
    public function testIsHashOnInvalidValue($hashedString)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isHash($hashedString));
    }

    public function testIsInputs()
    {
        $inputArray = [
            [
                'address' => 'JALLWDTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMP',
                'security' => 0,
                'keyIndex' => 1,
            ]
        ];
        $validator = new InputValidator();

        $this->assertTrue($validator->isInputs($inputArray));
    }

    public function invalidInputsProvider()
    {
        return [
            [
                [
                    [
                        'address' => 'JALLWDTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMP',
                        'security' => 'fd',
                        'keyIndex' => 1,
                    ],
                ],
            ],
            [
                [
                    [
                        'address' => 'JALLWDTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMP',
                        'security' => 0,
                        'keyIndex' => 'fds',
                    ],
                ],
            ],
            [
                [
                    [
                        'address' => 'JADTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMP',
                        'security' => 0,
                        'keyIndex' => 1,
                    ],
                ],
            ],
        ];
    }

    /**
     * @dataProvider invalidInputsProvider
     */
    public function testIsInputsOnValidValue($inputArray)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isInputs($inputArray));
    }

    public function testIsNinesTrytes()
    {
        $string = '999999999999999999';
        $validator = new InputValidator();

        $this->assertTrue($validator->isNinesTrytes($string));
    }

    public function invalidNinesTrytesProvider()
    {
        return [
            ['JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMPIVGPNE'],
            [1432432],
        ];
    }

    /**
     * @dataProvider invalidNinesTrytesProvider
     */
    public function testIsNinesTrytesOnInvalidValue($invalidValue)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isNinesTrytes($invalidValue));
    }

    public function validNumProvider()
    {
        return [
            ['1234'],
            [432.4321],
            [1234],
        ];
    }

    /**
     * @dataProvider validNumProvider
     */
    public function testIsNum($validNum)
    {
        $validator = new InputValidator();

        $this->assertTrue($validator->isNum($validNum));
    }

    public function testIsNumOnInvalidValue()
    {
        $invalidNum = 'AFDS';
        $validator = new InputValidator();

        $this->assertFalse($validator->isNum($invalidNum));
    }

    public function validAssocArrayProvider()
    {
        return [
            [
                ['foo' => '']
            ],
            [[]]
        ];
    }

    /**
     * @dataProvider validAssocArrayProvider
     */
    public function testIsAssocArray($array)
    {
        $validator = new InputValidator();

        $this->assertTrue($validator->isAssocArray($array));
    }

    public function invalidAssocArrayProvider()
    {
        return [
            [null],
            ['foo'],
        ];
    }

    /**
     * @dataProvider invalidAssocArrayProvider
     */
    public function testIsAssocArrayOnInvalidAssocArray($array)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isAssocArray($array));
    }

    public function validStringProvider()
    {
        return [
            ['AFDS'],
            ['1234'],
        ];
    }

    /**
     * @dataProvider validStringProvider
     */
    public function testIsString($string)
    {
        $validator = new InputValidator();

        $this->assertTrue($validator->isString($string));
    }

    public function testIsStringOnInvalidString()
    {
        $invalidString = 1234;
        $validator = new InputValidator();

        $this->assertFalse($validator->isString($invalidString));
    }

    public function testIsTransfersArray()
    {
        $array = [
            [
                'address' => 'JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMPIVGPNE',
                'value' => 1234.00,
                'message' => 'AFDSA',
                'tag' => 'ASDFDSAFDFDSA',
            ],
        ];
        $validator = new InputValidator();

        $this->assertTrue($validator->isTransfersArray($array));
    }

    public function invalidTransfersArray()
    {
        return [
            [
                [
                    [
                        'address' => 'JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMPIVGPNE',
                        'value' => 1234,
                    ],
                ],
            ],
            [
                [
                    [
                        'address' => 'JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMP',
                        'value' => '1234',
                        'message' => 'AFDSA',
                        'tag' => 'ASDFDSAFDFDSA',
                    ]
                ],
            ],
            [
                [
                    'address' => 'JALLWDTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMP',
                    'value' => 1234,
                    'message' => 'AFDSA',
                    'tag' => 'ASDFDSAFDFDSA',
                ],
            ],
        ];
    }

    /**
     * @dataProvider invalidTransfersArray
     */
    public function testIsTransfersArrayOnInvalidArray($array)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isTransfersArray($array));
    }

    public function validTritArrayProvider()
    {
        return [
            [
                [-1, 0, 1],
            ],
            [
                [1],
            ],
            [
                [],
            ],
        ];
    }

    /**
     * @dataProvider validTritArrayProvider
     */
    public function testIsTritArray($array)
    {
        $validator = new InputValidator();

        $this->assertTrue($validator->isTritArray($array));
    }

    public function testIsTritArrayOnSpecifiedLength()
    {
        $array = [1];
        $validator = new InputValidator();

        $this->assertTrue($validator->isTritArray($array, 1));
    }

    public function invalidTritArrayProvider()
    {
        return [
            [
                [-1, 0, 2],
            ],
            [
                [2],
            ],
        ];
    }

    /**
     * @dataProvider invalidTritArrayProvider
     */
    public function testIsTritArrayOnInvalidArray($array)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isTritArray($array));
    }

    public function invalidTritArrayOnSpecifiedLengthProvider()
    {
        return [
            [
                [1, -1, 0], 4,
            ],
            [
                [1, -1, 0], 2,
            ],
        ];
    }

    /**
     * @dataProvider invalidTritArrayOnSpecifiedLengthProvider
     */
    public function testIsTritArrayOnInvalidArrayAndSpecifiedLength($array, $length)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isTritArray($array, $length));
    }

    public function testIsTrytes()
    {
        $tryte = 'JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMPIVGPNE';
        $validator = new InputValidator();

        $this->assertTrue($validator->isTrytes($tryte));
    }

    public function invalidTrytesProvider()
    {
        return [
            ['123adfdsafLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLASD'],
            [1432432],
        ];
    }

    /**
     * @dataProvider invalidTrytesProvider
     */
    public function testIsTrytesOnInvalidTryte($tryte)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isTrytes($tryte));
    }

    public function validUriProvider()
    {
        return [
            ['udp://8.8.8.8:14265'],
            ['udp://[2001:db8:a0b:12f0::1]'],
            ['udp://domain2.com'],
        ];
    }

    /**
     * @dataProvider validUriProvider
     */
    public function testIsUri($uri)
    {
        $validator = new InputValidator();

        $this->assertTrue($validator->isUri($uri));
    }

    public function invalidUriProvider()
    {
        return [
            ['http://8.8.8.8:14265'],
            [1234],
        ];
    }

    /**
     * @dataProvider invalidUriProvider
     */
    public function testIsUriOnInvalidUri($invalidUri)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isUri($invalidUri));
    }

    public function validValueProvider()
    {
        return [
            [1234432],
            [-130500],
        ];
    }

    /**
     * @dataProvider validValueProvider
     */
    public function testIsValue($value)
    {
        $validator = new InputValidator();

        $this->assertTrue($validator->isValue($value));
    }

    public function invalidValueProvider()
    {
        return [
            ['12344321'],
            [11234.0001],
            ['12432.04321'],
        ];
    }

    /**
     * @dataProvider invalidValueProvider
     */
    public function testIsValueOnInvalidValue($invalidValue)
    {
        $validator = new InputValidator();

        $this->assertFalse($validator->isValue($invalidValue));
    }
}
